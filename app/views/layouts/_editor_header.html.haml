-# coding: UTF-8
= javascript_include_tag "application", 'maps', 'http://js.pusherapp.com/1.9/pusher.min.js'
%header.page
  .wrapper
    %section.logo
      = link_to 'eMinder', root_path

    %section.search
      - if user_signed_in?
        %ul.list.inline
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
              = t('btn.header.maps.name')
              %b.caret
            %ul.dropdown-menu
              %li= link_to t('btn.header.maps.new'), new_map_path
              %li= link_to t('btn.header.maps.import'),  maps_import_path
              %li.divider
              %li.nav-header.version
                = t('btn.header.maps.current_revision')
                = @map.version
              %li= link_to_function t('btn.header.maps.save_revision'),  "omml.save({versioning:true})"
              %li= link_to t('btn.header.maps.show_revision'), map_versions_path(@map, :format => :json), :remote => true, :id => :revertoversion
              %li.divider
              %li= link_to t('btn.header.maps.public'), maps_public_path
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
              = t('btn.header.sharing.name')
              %b.caret
            %ul.dropdown-menu
              - if @map.user == current_user
                - if @map.isPublic
                  %li= link_to_function t('btn.header.sharing.set_private'), "omml.share()", :id => 'share_button'
                - else
                  %li= link_to_function t('btn.header.sharing.set_public'), "omml.share()", :id => 'share_button'
                - if @map.id
                  %li= link_to_function t('btn.header.sharing.invite_friend'), "$('#invite-user-modal').modal()"
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
              = t('btn.header.background.name')
              %b.caret
            %ul.dropdown-menu
              %li= link_to_function t('btn.header.background.color'), "toggleBackgroundColorpicker()", :id => 'colorpickerBackgroundHolder'
              %li= link_to_function t('btn.header.background.image'), "toggleBackgroundLibrary()"
              %li.divider
              %li= link_to_function t('btn.header.background.clear'), "omml.resetBackground()"
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
              = t('btn.header.insert.name')
              %b.caret
            %ul.dropdown-menu
              %li= link_to_function t('btn.header.insert.image'), "toggleClipartLibrary()"
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
              = t('btn.header.zoom')
              %b.caret
            %ul.dropdown-menu
              %li
                #zoomSlider
              %li.divider
              %li= link_to_function t('btn.reset'), "resetZoom()"
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
              = t('btn.header.node.name')
              %b.caret
            %ul.dropdown-menu
              %li= link_to_function t('btn.header.node.add'), "omml.selectedNodeActions('insertnode')"
              %li= link_to_function t('btn.header.node.add_sibling'), "omml.selectedNodeActions('insertsibling')"
              %li= link_to_function t('btn.header.node.delete'), "omml.selectedNodeActions('delete')"
              %li.divider
              %li
                = link_to_function t('btn.header.node.lock'), "omml.selectedNodeActions('lockunlockchild')"
                \-top
              %li= link_to_function t('btn.header.node.fold'), "omml.selectedNodeActions('foldunflodchild')"
              %li.divider
              %li= link_to_function t('btn.header.node.center_root'), "omml.centerRootNode('foldunflodchild')"
              %li= link_to_function t('btn.header.node.center_selected'), "omml.selectedNodeActions('centernode')"
          %li.fullscreen-control
            = link_to_function t('btn.toggle_fullscreen'), "screenfull.toggle( document.documentElement );"
          %li#play-map
            = link_to_function t('btn.play'), "playMap()"
          %li#play-next{:style => "display:none"}
            = link_to_function t('btn.next'), "omml.next()"
          %li#play-end{:style => "display:none"}
            = link_to_function t('btn.close'), "closeMap()"
          %li#play-idx{:style => "display:none;padding-top:10px"}
          %li
            %span#savemsg.label.label-info.hide
              = t('loading.saving')

    %ul.list.inline.session
      - if user_signed_in?
        %li#fat-menu.dropdown.user
          %a.dropdown-toggle{'data-toggle' => 'dropdown', href: '#'}
            -#= image_tag user_avatar(current_user)
            - if current_user.name
              %span= current_user.username
            - else
              %span= current_user.email
              %i.icon-caret-down

          %ul.dropdown-menu.up
            %li= link_to t('btn.header.edit_profile'), edit_user_registration_path(current_user)
            %li.divider
            %li= link_to t('btn.header.sign_out'), destroy_user_session_path, method: :delete