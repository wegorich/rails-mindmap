%script{:lang => "javascript"}
  $(document).ready(function(){
  disableSelection(document.body);
  <haml:silent>	 if @map.id
  </haml:silent><haml:block>		omml = new OpenMindMap.map('holder',
  'toolbar',
  {authtoken: '<haml:loud> form_authenticity_token </haml:loud>',
  user: { email : '<haml:loud> current_user.email </haml:loud>' }},
  '<haml:loud> @map.conf </haml:loud>',
  function(){
  $('#savemsg').show();
  },
  function(){
  $('#savemsg').hide();
  }
  );
  <haml:silent>		 if @readOnly
  </haml:silent><haml:block>		omml.setReadOnly();
  </haml:block><haml:silent>		 else
  </haml:silent><haml:block>		omml.hud(new OpenMindMap.utils.hud({id:'node-window', omm:omml}));
  populateMenu();
  loadClip();
  loadBackgroundColorpicker();
  $('#revertoversion').on('ajax:success', function(e, data){
  var buff = '';
  $(data).each(function(){
  buff += "<a href='<haml:loud> map_versions_path(@map) </haml:loud>/" + this.version.number + ".svg' class='lightbox btn' >" + 	this.version.number + '</a>'
  });
  $('#versioning-modal > .modal-body > p').html(buff);
  $('#versioning-modal').modal({
  keyboard: true,
  backdrop: 'static',
  show: true
  });
  });
  inviteModal =  function(){
  $('#invite-user-modal').modal({
  keyboard: true,
  backdrop: 'static',
  show: false
  });
  }
  setInterval(function(){
  if(omml.changed) omml.save();
  }, 10000);
  </haml:block>		omml.load(<haml:loud> @map.id </haml:loud>);
  
  $("#zoomSlider").slider({
  value: 100,
  min:10,
  max:500,
  step:2,
  slide: zoom
  });
  $("#zoomSlider > a").text('100 %');
  $('#yt-query').autocomplete({source: function( request, response ) {
  var url = String.format("https://gdata.youtube.com/feeds/api/videos?q={0}&v=2&alt=jsonc", request.term);
  $.getJSON(url, function(resp){
  var data = resp.data;
  response( $.map(data.items, function(item){
  return {label: item.title, value: item.id, item : item} }
  ));
  })
  },
  minLength: 3,
  select: function( event, ui ) {
  var guid = $('#youtube-modal input#guid').val();
  var node = omml.getNodeByGUID(guid);
  node.videoData = ui.item.item;
  node.loadYoutubeVideo();
  },
  open: function() {
  $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
  },
  close: function() {
  $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
  }
  });
  
  changeVideo = function(guid){
  $('#attachment-modal').modal('hide');
  var node = omml.getNodeByGUID(guid);
  node.showYouTubeSearchBox();
  }
  </haml:block>	if(!screenfull){
  screenfull = {};
  screenfull.toggle = screenfull.request = function(){};
  $('.fullscreen-control').hide();
  }
  });
#holder
- unless @readOnly
  / Start dialog boxes
  = render 'dialogs'
  / End dialog boxes
  / Start HUD
  = render 'hud'
  / End HUD
